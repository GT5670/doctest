= (Optional) Adding Your Application to Jenkins 

Jenkins, a popular open-source automation server, can significantly streamline your development workflow by automating build, test, and deployment processes. Follow the steps in this chapter to integrate your application with Jenkins. If you selected another Continuous Integration (CI) provider when building your application, you may skip this chapter.

.Prerequisites

* Jenkins is installed and configured in your environment.

* You have the necessary permissions to create and manage Jenkins jobs.


library identifier: 'RHTAP_Jenkins@main', retriever: modernSCM(
  [$class: 'GitSCMSource',
   remote: 'https://github.com/redhat-appstudio/tssc-sample-jenkins.git'])

pipeline {
    agent any
    environment {
        // Not used but init.sh will fail if they're missing
        COSIGN_SECRET_PASSWORD = 'dummy'
        COSIGN_SECRET_KEY = 'dummy'
        // Used to verify the image signature and attestation
        COSIGN_PUBLIC_KEY = credentials('COSIGN_PUBLIC_KEY')
    }
    stages {
        stage('Compute Image Changes') {
            steps {
                script {
                    rhtap.info('gather_deploy_images')
                    rhtap.gather_deploy_images()
                }
            }
        }
        stage('Verify EC') {
            steps {
                script {
                    rhtap.info('verify_enterprise_contract')
                    rhtap.verify_enterprise_contract()
                }
            }
        }
    }
}


maybe just note: you can take a look at the the Jenkinsfile in component repository and verify it/update it to your Jenkins configuration(for example limit where the pipeline can run with agent settings)
